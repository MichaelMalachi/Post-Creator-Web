<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->

<svg
   width="640"
   height="1136"
   viewBox="0 0 640 1136"
   version="1.1"
   id="svg1"
   inkscape:version="1.3 (0e150ed6c4, 2023-07-21)"
   sodipodi:docname="SplashScreen-mobile.svg"
   inkscape:export-filename="SplashScreen-mobile.png"
   inkscape:export-xdpi="96"
   inkscape:export-ydpi="96"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns:xlink="http://www.w3.org/1999/xlink"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg">
  <sodipodi:namedview
     id="namedview1"
     pagecolor="#ffffff"
     bordercolor="#000000"
     borderopacity="0.25"
     inkscape:showpageshadow="2"
     inkscape:pageopacity="0.0"
     inkscape:pagecheckerboard="0"
     inkscape:deskcolor="#d1d1d1"
     inkscape:document-units="px"
     inkscape:zoom="0.54985492"
     inkscape:cx="106.3917"
     inkscape:cy="488.31063"
     inkscape:window-width="1920"
     inkscape:window-height="1019"
     inkscape:window-x="0"
     inkscape:window-y="0"
     inkscape:window-maximized="1"
     inkscape:current-layer="layer1" />
  <defs
     id="defs1">
    <linearGradient
       inkscape:collect="always"
       xlink:href="#linearGradient8"
       id="linearGradient10"
       x1="1175.9189"
       y1="158.92595"
       x2="2818.7229"
       y2="2058.0813"
       gradientUnits="userSpaceOnUse"
       spreadMethod="pad"
       gradientTransform="matrix(0.16727846,0,0,0.5271798,-1.6687907,-1.7987661)" />
    <linearGradient
       id="linearGradient8"
       inkscape:collect="always">
      <stop
         style="stop-color:#000848;stop-opacity:1;"
         offset="0"
         id="stop9" />
      <stop
         style="stop-color:#004246;stop-opacity:1;"
         offset="1"
         id="stop10" />
    </linearGradient>
    <meshgradient
       inkscape:collect="always"
       id="meshgradient1"
       gradientUnits="userSpaceOnUse"
       x="33.616074"
       y="990.99585"
       gradientTransform="translate(40,-20)">
      <meshrow
         id="meshrow1">
        <meshpatch
           id="meshpatch1">
          <stop
             path="c 123.15,0  246.301,0  369.451,0"
             style="stop-color:#ffffff;stop-opacity:1"
             id="stop1" />
          <stop
             path="c 0,2.81598  0,5.63196  0,8.44794"
             style="stop-color:#f9f9f9;stop-opacity:1"
             id="stop2" />
          <stop
             path="c -123.15,0  -246.301,0  -369.451,0"
             style="stop-color:#ffffff;stop-opacity:1"
             id="stop3" />
          <stop
             path="c 0,-2.81598  0,-5.63196  0,-8.44794"
             style="stop-color:#f9f9f9;stop-opacity:1"
             id="stop4" />
        </meshpatch>
      </meshrow>
    </meshgradient>
  </defs>
  <g
     inkscape:label="Layer 1"
     inkscape:groupmode="layer"
     id="layer1">
    <rect
       style="font-variation-settings:'wdth' 109.9, 'wght' 700;fill:url(#linearGradient10);fill-opacity:1;stroke:none;stroke-width:1.67989;stroke-dasharray:none"
       id="rect2"
       width="642.45374"
       height="1137.5453"
       x="-1.6673373"
       y="0.42574915"
       ry="0" />
    <g
       id="g1"
       transform="translate(10.566603,240)">
      <text
         xml:space="preserve"
         style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:118.151px;line-height:0px;font-family:Archivo;-inkscape-font-specification:'Archivo, @wght=700,wdth=109.9';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;font-variation-settings:'wdth' 109.9, 'wght' 700;text-align:center;text-anchor:middle;fill:#d90baa;stroke-width:1.70642"
         x="195.45755"
         y="169.75751"
         id="text2"
         transform="scale(0.9340924,1.0705579)"><tspan
           id="tspan2"
           style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:118.151px;font-family:Archivo;-inkscape-font-specification:'Archivo, @wght=700,wdth=109.9';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;font-variation-settings:'wdth' 109.9, 'wght' 700;fill:#ffffff;fill-opacity:1;stroke-width:1.70642"
           x="195.45755"
           y="169.75751"
           sodipodi:role="line">Post</tspan></text>
      <text
         xml:space="preserve"
         style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:118.151px;line-height:0px;font-family:Archivo;-inkscape-font-specification:'Archivo, @wght=700,wdth=109.9';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;font-variation-settings:'wdth' 109.9, 'wght' 700;text-align:center;text-anchor:middle;fill:#d90baa;stroke-width:1.70642"
         x="365.19525"
         y="266.9082"
         id="text137"
         transform="scale(0.9340924,1.0705579)"><tspan
           id="tspan137"
           style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:118.151px;font-family:Archivo;-inkscape-font-specification:'Archivo, @wght=700,wdth=109.9';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;font-variation-settings:'wdth' 109.9, 'wght' 700;fill:#ffffff;fill-opacity:1;stroke-width:1.70642"
           x="365.19525"
           y="266.9082"
           sodipodi:role="line">Creator</tspan></text>
    </g>
    <path
       style="fill:#f9f9f9;stroke-width:0.361398"
       d="m 372.08924,1086.3151 c -0.25949,-0.081 -1.08734,-0.4607 -1.83966,-0.8456 -0.96736,-0.4949 -1.40032,-0.8292 -1.4787,-1.1414 -0.23112,-0.9208 0.64553,-1.601 1.27606,-0.9902 0.38691,0.3749 2.23228,1.2294 3.1747,1.4701 1.21127,0.3093 2.95447,0.078 4.56689,-0.6064 0.75792,-0.3217 1.4205,-0.6394 1.4724,-0.706 0.0519,-0.067 0.57232,-0.4455 1.1564,-0.8418 1.18287,-0.8027 3.61966,-3.1844 4.51911,-4.4172 l 0.58521,-0.8021 -0.81841,-0.01 c -0.9734,-0.01 -1.95947,-0.2138 -4.12117,-0.8706 -3.17619,-0.9648 -3.87406,-1.4422 -3.40095,-2.3261 0.26065,-0.487 0.75533,-0.4869 1.75867,0 0.43614,0.2119 1.09023,0.4587 1.45355,0.5485 0.36328,0.09 1.50982,0.3747 2.54782,0.6334 1.03801,0.2587 2.28448,0.5258 2.7699,0.5935 l 0.88258,0.123 0.77165,-1.3212 c 0.42439,-0.7266 0.85525,-1.3729 0.95749,-1.4361 0.10224,-0.063 0.1859,-0.2518 0.1859,-0.4191 0,-0.1673 0.1193,-0.4384 0.26509,-0.6022 0.48514,-0.5452 1.47744,-2.6889 1.31267,-2.8357 -0.33701,-0.3001 -4.4821,-2.3016 -5.64471,-2.7255 -0.41012,-0.1495 -1.08489,-0.4412 -1.49948,-0.6482 -0.77831,-0.3885 -1.03909,-0.3774 -1.03909,0.044 0,0.1344 -0.22404,0.4903 -0.4979,0.7909 -1.52026,1.6689 -2.37107,2.5282 -2.5032,2.5282 -0.0818,0 -0.30964,0.1778 -0.50621,0.395 -0.19656,0.2172 -0.50762,0.4753 -0.69117,0.5735 -0.8181,0.4379 -4.1001,1.4957 -4.96792,1.6013 -0.91524,0.1114 -0.97463,0.1543 -1.36993,0.9909 -0.4975,1.0529 -0.51444,1.7416 -0.0827,3.3616 0.31814,1.1939 0.31716,1.2353 -0.0362,1.4936 -0.66555,0.4867 -1.04094,0.3251 -1.46471,-0.6308 -0.59465,-1.3412 -0.67412,-3.3358 -0.17763,-4.4581 l 0.39295,-0.8884 -0.42638,-0.1621 c -1.39326,-0.5297 -3.04359,-1.385 -3.72515,-1.9305 -0.96013,-0.7686 -2.25064,-2.0414 -2.25064,-2.2199 0,-0.072 -0.1493,-0.2956 -0.33176,-0.4968 -1.19967,-1.3228 -1.36851,-2.9137 -0.30922,-2.9137 0.34883,0 0.61145,0.2609 1.15933,1.1516 1.33541,2.1709 2.8274,3.4503 5.18155,4.4431 1.82947,0.7716 2.85996,0.8108 4.74285,0.1805 0.74404,-0.2491 1.57035,-0.5015 1.83626,-0.5609 0.26588,-0.059 0.73299,-0.3225 1.03801,-0.5849 0.30503,-0.2622 0.61601,-0.4769 0.69114,-0.4771 0.18793,-3e-4 1.61747,-1.4481 2.37063,-2.4009 l 0.61994,-0.7842 -0.89251,-0.3949 c -0.49088,-0.2171 -1.10957,-0.4461 -1.37483,-0.5088 -0.2653,-0.062 -0.99193,-0.3279 -1.61472,-0.5894 -1.04459,-0.4385 -2.11516,-0.8389 -5.37877,-2.0121 -0.67473,-0.2425 -1.72564,-0.6624 -2.33543,-0.9331 -0.60975,-0.2707 -1.22807,-0.4922 -1.37397,-0.4922 -0.14589,0 -0.78882,-0.2204 -1.42871,-0.4897 -0.63986,-0.2693 -1.72015,-0.6401 -2.40059,-0.8239 -0.68048,-0.1839 -1.83171,-0.5072 -2.5583,-0.7184 -0.72663,-0.2113 -1.74574,-0.478 -2.26474,-0.5926 -0.519,-0.1147 -1.75047,-0.4159 -2.73658,-0.6695 -2.27699,-0.5854 -7.28615,-1.5664 -8.81187,-1.7258 -0.64257,-0.067 -1.47064,-0.065 -1.84009,0 l -0.67178,0.126 v 1.6635 1.6635 l 0.99082,0.7376 c 1.18994,0.8858 1.42065,1.6242 0.62142,1.9884 -0.41843,0.1906 -0.5692,0.1629 -1.05041,-0.1928 l -0.56183,-0.4155 v 7.9323 7.9323 h -3.58586 -3.58583 v -16.7967 -16.7969 h 3.58583 3.58586 v 5.3315 5.3316 l 2.39684,0.043 c 2.27109,0.04 4.13183,0.3081 6.47188,0.9312 0.57094,0.152 1.50512,0.3527 2.07602,0.4459 0.57094,0.093 1.80236,0.3871 2.73658,0.6531 0.93422,0.2659 1.99582,0.5306 2.3591,0.5883 0.63552,0.1008 3.79526,1.0716 5.75625,1.7686 0.519,0.1844 1.36828,0.4853 1.88729,0.6685 0.51901,0.1832 1.52788,0.5761 2.24194,0.8731 0.71408,0.297 1.40721,0.5399 1.54031,0.5399 0.13306,0 0.93646,0.2972 1.78524,0.6606 1.69582,0.7258 2.05553,0.8075 1.70721,0.3878 -0.29953,-0.3609 -0.18338,-1.0538 0.2189,-1.306 0.23379,-0.1465 0.51141,-0.1332 1.01412,0.048 0.87486,0.3163 1.01621,0.1351 1.02019,-1.3083 l 0.003,-1.0456 -1.40883,-0.6058 c -0.77492,-0.3332 -1.48503,-0.6058 -1.57813,-0.6058 -0.0931,0 -0.75424,-0.2655 -1.46923,-0.59 -0.71502,-0.3244 -1.68219,-0.7102 -2.1493,-0.8572 -1.40913,-0.4435 -2.87923,-1.2574 -3.29141,-1.8223 -0.30056,-0.4119 -0.38882,-0.8187 -0.38882,-1.7929 v -1.2601 l -1.08257,0.5191 c -0.59544,0.2854 -1.16247,0.519 -1.26012,0.519 -0.0977,0 -0.8211,0.2972 -1.60762,0.6605 -0.78654,0.3633 -1.51743,0.6606 -1.62426,0.6606 -0.1068,0 -0.61319,0.2123 -1.12529,0.4718 -0.5121,0.2595 -1.13584,0.4719 -1.3861,0.4719 -0.53802,0 -0.93563,-0.4141 -0.84575,-0.8808 0.0841,-0.4368 1.14838,-1.1431 2.11404,-1.4031 0.42287,-0.1139 1.25687,-0.4534 1.85339,-0.7545 0.59653,-0.3011 1.18495,-0.5475 1.30765,-0.5475 0.12269,0 0.6984,-0.2265 1.27932,-0.5034 0.58091,-0.2768 1.5634,-0.6873 2.18331,-0.9123 1.05106,-0.3814 1.15297,-0.4719 1.50985,-1.3421 0.60845,-1.4834 1.21354,-2.3264 1.76659,-2.4613 0.27686,-0.067 0.7435,-0.3221 1.03688,-0.5659 0.6644,-0.5518 0.85168,-0.5515 2.48621,0 0.72659,0.2471 1.66081,0.5552 2.07602,0.6847 0.41521,0.1295 1.11585,0.397 1.55701,0.5944 0.44115,0.1974 1.07812,0.4138 1.41545,0.4808 0.33737,0.067 1.33469,0.4046 2.21628,0.7502 0.88159,0.3455 1.71133,0.6283 1.84386,0.6283 0.13252,0 0.76312,0.2122 1.40135,0.4715 0.6382,0.2594 1.19381,0.4381 1.23468,0.3973 0.0408,-0.041 -0.0595,-0.7222 -0.22305,-1.5141 -0.48265,-2.3367 -2.06081,-4.8076 -4.07253,-6.3765 -1.24761,-0.973 -5.04404,-2.0371 -7.26765,-2.0371 -3.53339,0 -7.73638,2.3249 -9.89451,5.4733 -0.71763,1.0469 -2.37113,4.4904 -2.49209,5.1898 -0.0877,0.5071 -1.23245,0.65 -1.41408,0.1766 -0.40705,-1.0607 1.80974,-5.7906 3.697,-7.8882 0.62637,-0.6963 3.12327,-2.5991 3.97729,-3.031 1.69319,-0.8563 3.01678,-1.224 4.83696,-1.3436 1.98683,-0.1305 5.34765,0.1401 6.23358,0.5021 2.54829,1.041 3.46382,1.5161 3.67231,1.9057 0.099,0.185 0.29826,0.3363 0.44278,0.3363 0.14449,0 0.44001,0.2336 0.65663,0.5191 0.21666,0.2854 0.60281,0.7517 0.85818,1.036 0.41626,0.4637 0.63921,0.8241 1.58979,2.5699 0.3627,0.6662 1.14885,3.7337 1.14885,4.4829 0,0.5852 0.0544,0.6275 1.52597,1.1896 0.83927,0.3205 1.59962,0.5826 1.68968,0.5826 0.09,0 0.38518,0.1009 0.65586,0.2243 0.47055,0.2144 1.22417,1.5089 1.22417,2.1028 0,0.5645 -2.02586,7.1046 -2.30482,7.4408 -0.10892,0.1312 -0.65402,0.3711 -1.21137,0.5332 -0.55731,0.162 -1.01329,0.3696 -1.01329,0.4613 0,0.2864 -1.33258,0.4325 -2.02,0.2215 -0.62146,-0.1907 -0.68672,-0.166 -1.24837,0.4737 -0.32595,0.3712 -0.67936,0.8205 -0.78536,0.9984 -0.10596,0.178 -0.46733,0.6862 -0.80296,1.1295 l -0.61029,0.8061 1.31202,0.6364 c 0.72161,0.3501 1.37209,0.6365 1.44548,0.6365 0.16564,0 2.61552,1.1452 4.09324,1.9133 0.60538,0.3147 1.12041,0.5438 1.14451,0.5089 0.21475,-0.3092 1.43501,-3.0145 1.43501,-3.1813 0,-0.119 0.29533,-1.1221 0.65626,-2.2292 1.17501,-3.6041 1.8217,-6.8223 2.09611,-10.4312 0.4563,-6.0006 -0.24661,-10.7546 -2.14172,-14.4845 -1.17508,-2.3129 -3.09978,-3.5921 -4.87262,-3.2384 -1.23302,0.2461 -3.42729,1.1746 -3.68511,1.5595 -0.0632,0.094 -0.36042,0.1434 -0.66056,0.1091 -0.43936,-0.05 -0.55753,-0.1656 -0.60651,-0.5926 -0.0836,-0.7292 0.16936,-0.9719 1.91199,-1.835 1.47555,-0.7309 1.55893,-0.7486 3.51036,-0.7464 2.20165,0 2.82552,0.2247 4.23632,1.5084 1.56969,1.4285 3.18128,5.4588 3.78315,9.4613 0.39082,2.599 0.39457,7.1222 0.009,10.26 -0.33936,2.7586 -1.37035,7.3065 -2.20338,9.7195 -0.30459,0.8824 -0.62229,1.8778 -0.70602,2.2122 -0.0837,0.3343 -0.41655,1.0761 -0.73961,1.6486 l -0.58738,1.0408 1.08525,0.5502 c 0.59692,0.3026 1.34006,0.7709 1.65144,1.0405 0.31142,0.2697 0.61459,0.4904 0.67376,0.4905 0.22364,0 1.28054,1.067 1.75632,1.7723 0.38529,0.5711 0.49523,0.9642 0.49523,1.7707 0,1.2877 -0.44358,2.0634 -1.52883,2.6733 -0.70953,0.3988 -1.04162,0.4474 -3.17051,0.4646 l -2.378,0.019 v -0.6605 -0.6606 l 1.88729,-0.1013 c 1.96171,-0.1053 3.30839,-0.5647 3.55747,-1.2138 0.30777,-0.8021 -0.61923,-2.2172 -1.90201,-2.9039 -0.21962,-0.1175 -0.51738,-0.3317 -0.66175,-0.476 -0.29848,-0.2985 -1.73815,-1.0612 -2.00316,-1.0612 -0.0964,0 -0.52689,0.676 -0.9567,1.5021 -0.42981,0.8262 -0.86392,1.5531 -0.96468,1.6153 -0.10076,0.062 -0.18319,0.2355 -0.18319,0.3848 0,0.1493 -0.3052,0.6963 -0.67824,1.2156 -0.66378,0.9239 -0.6688,0.9442 -0.23592,0.947 0.68427,0.01 0.95066,0.2662 0.8821,0.8668 -0.0605,0.5298 -0.0967,0.5474 -1.24002,0.6019 -0.98919,0.047 -1.21315,0.1226 -1.39916,0.4718 -0.3841,0.7209 -2.15418,2.8274 -3.30188,3.9293 -2.23352,2.1445 -4.1585,3.3918 -6.55389,4.2464 -0.7898,0.2818 -4.38506,0.3388 -5.21349,0.083 z m 10.08185,-23.6486 c 0.36133,-0.5451 0.92049,-1.3614 1.24256,-1.8144 0.32209,-0.4529 0.55811,-0.851 0.52451,-0.8846 -0.13485,-0.1348 -1.89225,-0.8398 -2.09781,-0.8415 -0.12119,0 -0.66617,-0.2095 -1.21113,-0.4632 l -0.99081,-0.4613 v 0.7435 c 0,0.409 -0.10516,1.1367 -0.23371,1.6173 -0.279,1.0432 -0.73219,1.2877 -2.12539,1.1464 l -0.94364,-0.096 1.18769,0.5453 c 0.65324,0.2998 1.51669,0.6337 1.91874,0.7421 0.4021,0.1082 0.97169,0.3223 1.2658,0.4757 0.29407,0.1534 0.5958,0.2793 0.67047,0.28 0.0746,0 0.43136,-0.4447 0.79272,-0.9896 z m 7.50151,-4.6866 c 0.0693,-0.2509 0.43813,-1.4363 0.81966,-2.6342 0.62366,-1.9579 0.88249,-3.4174 0.64769,-3.6521 -0.11069,-0.1108 -3.79334,-1.4017 -4.89604,-1.7163 -0.46711,-0.1333 -1.40129,-0.468 -2.07603,-0.7439 -0.67469,-0.2759 -1.605,-0.5872 -2.06738,-0.6919 -0.46233,-0.1046 -1.0993,-0.308 -1.41545,-0.452 -1.1477,-0.5229 -2.04237,-0.8516 -2.31736,-0.8516 -0.15453,0 -1.0147,-0.2854 -1.91143,-0.6341 -2.56651,-0.9982 -3.61211,-1.2742 -3.61211,-0.9536 0,0.1458 -0.29725,0.9085 -0.66053,1.695 -0.36331,0.7865 -0.66055,1.5207 -0.66055,1.6315 0,0.1108 -0.18955,0.581 -0.42121,1.0449 l -0.42121,0.8434 0.56273,0.4502 c 0.30954,0.2476 0.6477,0.4536 0.7515,0.4576 0.10382,0.01 0.52843,0.1714 0.94364,0.372 0.41521,0.2006 0.86075,0.3676 0.99005,0.3711 0.12931,0 0.87864,0.3036 1.66514,0.6669 0.78656,0.3633 1.54505,0.6606 1.6856,0.6606 0.14051,0 0.89902,0.2972 1.68557,0.6605 0.78651,0.3633 1.51928,0.6605 1.62831,0.6605 0.10907,0 0.79703,0.2549 1.52879,0.5662 0.7318,0.3115 1.35232,0.5663 1.37896,0.5663 0.087,0 -0.29787,-1.7566 -0.77619,-3.5422 -0.25771,-0.962 -0.4418,-1.9811 -0.40917,-2.2647 0.0512,-0.4442 0.15515,-0.5235 0.7511,-0.5732 0.77545,-0.065 0.6975,-0.197 1.20089,2.0393 0.61842,2.7471 1.32343,5.1611 1.52719,5.2291 0.27972,0.093 0.0354,-1.396 -0.58004,-3.5352 -0.26437,-0.9188 -0.48063,-1.8778 -0.48063,-2.131 0,-0.6035 0.44405,-0.9556 1.02225,-0.8105 0.48652,0.1221 0.79696,0.9023 1.25316,3.1495 0.11424,0.5628 0.38152,1.7186 0.59392,2.5682 0.3439,1.3758 0.45074,1.5767 0.97599,1.8356 0.72525,0.3574 0.93147,0.3043 1.09319,-0.2819 z m -103.25621,18.9907 c -4.98072,-0.9482 -8.44913,-3.6819 -9.97586,-7.8627 l -0.50866,-1.393 -0.0537,-12.3145 -0.0537,-12.3145 h 3.58539 3.58544 l 0.0541,11.4695 0.0541,11.4696 0.61723,1.2534 c 1.07162,2.1762 2.8695,3.3196 5.5037,3.5002 2.89162,0.1982 5.34497,-1.0769 6.58154,-3.4208 l 0.50856,-0.964 0.0527,-11.654 0.0528,-11.6539 h 3.6837 3.6837 l -0.0582,12.1258 -0.0582,12.1258 -0.51279,1.5098 c -1.31046,3.8583 -4.53487,6.7443 -8.77125,7.8504 -1.94547,0.5081 -6.00535,0.647 -7.97064,0.2729 z m 31.47256,0.071 c -3.30417,-0.4847 -5.70164,-1.5648 -7.53686,-3.3954 -1.74844,-1.744 -2.56011,-3.5443 -2.91034,-6.4553 l -0.13108,-1.0894 3.55587,0.052 3.55588,0.052 0.13888,0.8145 c 0.24998,1.4658 1.30642,2.7508 2.80702,3.4143 2.93249,1.2967 7.24264,0.6384 8.66362,-1.3232 1.47346,-2.034 0.56378,-4.2235 -2.18541,-5.2602 -0.61044,-0.2302 -2.69708,-0.8295 -4.63693,-1.3318 -5.20457,-1.3477 -7.29771,-2.3501 -9.10521,-4.3604 -1.34006,-1.4906 -1.70688,-2.6463 -1.699,-5.353 0.006,-1.8945 0.076,-2.4403 0.43129,-3.339 1.26229,-3.1925 4.48025,-5.6204 8.5604,-6.459 1.85629,-0.3816 5.38512,-0.3867 7.28195,-0.011 2.18442,0.4331 4.72294,1.7449 6.14901,3.1775 1.61152,1.619 2.76051,4.1598 2.76051,6.1046 v 0.6209 h -3.47051 -3.47046 l -0.11742,-0.626 c -0.17075,-0.9101 -0.99597,-2.0811 -1.86268,-2.6431 -2.20597,-1.4303 -6.864,-1.0021 -8.24881,0.7585 -0.95934,1.2195 -0.94505,2.8259 0.0351,3.9423 0.89187,1.0157 2.05376,1.4975 6.03699,2.5029 2.00551,0.5064 4.17888,1.1356 4.82969,1.3985 2.89053,1.1676 4.79471,2.8052 5.86835,5.047 0.62302,1.3008 0.68362,1.5792 0.7482,3.4369 0.0573,1.6469 -0.003,2.2588 -0.31994,3.3028 -1.15175,3.7815 -4.39663,6.2182 -9.25657,6.9507 -1.95192,0.2943 -4.74473,0.3254 -6.47152,0.072 z M 213.3682,1059.8819 v -16.7968 h 3.68022 3.68023 v 16.7968 16.7969 h -3.68023 -3.68022 z m 12.07865,0 v -16.7968 h 3.58587 3.58584 v 13.8715 13.8717 h 7.17169 7.1717 v 2.9252 2.9253 h -10.75752 -10.75758 z m 25.10097,0 v -16.7968 h 3.68021 3.6802 v 13.8715 13.8717 h 7.17169 7.17172 v 2.9252 2.9253 h -10.85189 -10.85193 z m 147.77474,-0.01 v -16.8013 l 3.24261,0.052 3.24257,0.052 7.18467,10.4687 7.18471,10.4688 0.0487,-10.5159 0.0487,-10.5159 h 3.67863 3.67865 v 16.7969 16.7969 h -3.19329 -3.19331 l -7.23397,-10.4743 -7.23396,-10.4743 -0.0488,10.4743 -0.0487,10.4743 h -3.67865 -3.67863 z m -42.53819,14.0493 c -0.21733,-0.5664 -0.1123,-0.9444 0.54656,-1.967 0.3636,-0.5644 0.98871,-1.708 1.38914,-2.5415 0.67075,-1.3961 0.74503,-1.7159 0.94338,-4.0632 0.1184,-1.4012 0.21519,-3.1041 0.21504,-3.784 -2.9e-4,-1.3096 0.19042,-1.6892 0.84899,-1.6892 0.65913,0 0.8494,0.3792 0.84767,1.6892 -0.003,1.9057 -0.34272,5.3164 -0.67196,6.736 -0.52207,2.2512 -2.73332,5.9183 -3.5687,5.9183 -0.23955,0 -0.48712,-0.1344 -0.55012,-0.2986 z m 18.05429,-7.4326 c -0.43915,-0.1993 -0.90625,-0.4532 -1.03801,-0.5641 -0.13177,-0.1109 -0.47315,-0.3768 -0.75858,-0.5908 -0.6813,-0.5107 -0.72066,-1.4103 -0.0745,-1.7046 0.38571,-0.1757 0.57895,-0.1005 1.46264,0.5696 1.11311,0.844 1.87277,1.0699 2.99528,0.8903 0.84408,-0.1349 1.383,0.2384 1.28852,0.8927 -0.12869,0.8915 -2.37962,1.1859 -3.87531,0.5069 z m -20.81102,-1.084 c -0.29634,-0.1088 -1.09063,-0.4576 -2.83094,-1.2434 -0.5709,-0.2577 -1.32724,-0.7168 -1.68075,-1.0201 -0.53582,-0.4597 -0.62158,-0.6359 -0.51543,-1.0588 0.17813,-0.7098 1.02344,-0.6831 2.11302,0.067 0.4588,0.3157 1.36584,0.7744 2.01567,1.0195 2.07106,0.7812 2.21952,0.8761 2.21952,1.4187 0,0.8009 -0.50866,1.1156 -1.32109,0.8175 z"
       id="path138" />
    <text
       xml:space="preserve"
       style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:22.3178px;line-height:0px;font-family:Archivo;-inkscape-font-specification:'Archivo, @wght=700,wdth=109.9';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;font-variation-settings:'wdth' 109.9, 'wght' 700;text-align:center;text-anchor:middle;fill:#f9f9f9;fill-opacity:1;stroke:none;stroke-width:1.97269;stroke-dasharray:none"
       x="207.04364"
       y="947.15808"
       id="text138"><tspan
         sodipodi:role="line"
         id="tspan138"
         x="207.04366"
         y="947.15808"
         style="stroke-width:1.97269">Loading components...</tspan></text>
    <rect
       style="font-variation-settings:'wdth' 109.9, 'wght' 700;fill:url(#meshgradient1);fill-opacity:1;stroke:none;stroke-width:1.35861;stroke-dasharray:none"
       id="rect138"
       width="369.45139"
       height="8.4479351"
       x="73.616074"
       y="970.99585" />
  </g>
  <script
     id="mesh_polyfill"
     type="text/javascript">&#10;!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();&#10;</script>
</svg>
